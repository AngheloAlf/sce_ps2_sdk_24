This is Info file info-stnd.info, produced by Makeinfo version 1.68
from the input file info-stnd.texi.

INFO-DIR-SECTION Texinfo documentation system
START-INFO-DIR-ENTRY
* info program: (info-stnd).    Standalone Info-reading program.
END-INFO-DIR-ENTRY

This file documents GNU Info, a program for viewing the on-line
formatted versions of Texinfo files.  This documentation is different
from the documentation for the Info reader that is part of GNU Emacs.
If you do not know how to use Info, but have a working Info reader, you
should read that documentation first.

Copyright (C) 1992, 93, 96, 97 Free Software Foundation, Inc.

Permission is granted to make and distribute verbatim copies of this
manual provided the copyright notice and this permission notice are
preserved on all copies.

Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided also that the
sections entitled "Copying" and "GNU General Public License" are
included exactly as in the original, and provided that the entire
resulting derived work is distributed under the terms of a permission
notice identical to this one.

Permission is granted to copy and distribute translations of this manual
into another language, under the above conditions for modified versions,
except that this permission notice may be stated in a translation
approved by the Free Software Foundation.


File: info-stnd.info,  Node: Top,  Next: What is Info,  Up: (dir)

The GNU Info Program
********************

This file documents GNU Info, a program for viewing the on-line
formatted versions of Texinfo files, version 2.11.  This documentation
is different from the documentation for the Info reader that is part of
GNU Emacs.

* Menu:

* What is Info::
* Options::                     Options you can pass on the command line.
* Cursor Commands::             Commands which move the cursor within a node.
* Scrolling Commands::          Commands for moving the node around
                                  in a window.
* Node Commands::               Commands for selecting a new node.
* Searching Commands::          Commands for searching an Info file.
* Xref Commands::               Commands for selecting cross references.
* Window Commands::             Commands which manipulate multiple windows.
* Printing Nodes::              How to print out the contents of a node.
* Miscellaneous Commands::      A few commands that defy categories.
* Variables::                   How to change the default behavior of Info.
* GNU Info Global Index::       Global index containing keystrokes,
                                  command names, variable names,
                                  and general concepts.


File: info-stnd.info,  Node: What is Info,  Next: Options,  Prev: Top,  Up: Top

What is Info?
*************

"Info" is a program which is used to view Info files on an ASCII
terminal.  "Info files" are the result of processing Texinfo files with
the program `makeinfo' or with one of the Emacs commands, such as `M-x
texinfo-format-buffer'.  Texinfo itself is a documentation system that
uses a single source file to produce both on-line information and
printed output.  You can typeset and print the files that you read in
Info.


File: info-stnd.info,  Node: Options,  Next: Cursor Commands,  Prev: What is Info,  Up: Top

Command Line Options
********************

GNU Info accepts several options to control the initial node being
viewed, and to specify which directories to search for Info files.  Here
is a template showing an invocation of GNU Info from the shell:

     info [--OPTION-NAME OPTION-VALUE] MENU-ITEM...

The following OPTION-NAMES are available when invoking Info from the
shell:

`--directory DIRECTORY-PATH'
`-d DIRECTORY-PATH'
     Add DIRECTORY-PATH to the list of directory paths searched when
     Info needs to find a file.  You may issue `--directory' multiple
     times; once for each directory which contains Info files.
     Alternatively, you may specify a value for the environment variable
     `INFOPATH'; if `--directory' is not given, the value of `INFOPATH'
     is used.  The value of `INFOPATH' is a colon separated list of
     directory names.  If you do not supply `INFOPATH' or
     `--directory-path', Info uses a default path.

`--file FILENAME'
`-f FILENAME'
     Specify a particular Info file to visit.  By default, Info visits
     the file `dir'; if you use this option, Info will start with
     `(FILENAME)Top' as the first file and node.

`--index-search STRING'
     Go to the index entry STRING in the Info file specified with
     `--file'.  If no such entry, print `no entries found' and exit
     with nonzero status.  This can used from another program as a way
     to provide online help.

`--node NODENAME'
`-n NODENAME'
     Specify a particular node to visit in the initial file that Info
     loads.  This is especially useful in conjunction with `--file'(1).
     You may specify `--node' multiple times; for an interactive Info,
     each NODENAME is visited in its own window, for a non-interactive
     Info (such as when `--output' is given) each NODENAME is processed
     sequentially.

`--output FILENAME'
`-o FILENAME'
     Specify FILENAME as the name of a file to which to direct output.
     Each node that Info visits will be output to FILENAME instead of
     interactively viewed.  A value of `-' for FILENAME specifies the
     standard output.

`--subnodes'
     This option only has meaning when given in conjunction with
     `--output'.  It means to recursively output the nodes appearing in
     the menus of each node being output.  Menu items which resolve to
     external Info files are not output, and neither are menu items
     which are members of an index.  Each node is only output once.

`--help'
`-h'
     Produces a relatively brief description of the available Info
     options.

`--version'
     Prints the version information of Info and exits.

`MENU-ITEM'
     Info treats its remaining arguments as the names of menu items.
     The first argument is a menu item in the initial node visited,
     while the second argument is a menu item in the first argument's
     node.  You can easily move to the node of your choice by
     specifying the menu names which describe the path to that node.
     For example,

          info emacs buffers

     first selects the menu item `Emacs' in the node `(dir)Top', and
     then selects the menu item `Buffers' in the node `(emacs)Top'.

---------- Footnotes ----------

(1) Of course, you can specify both the file and node in a `--node'
command; but don't forget to escape the open and close parentheses from
the shell as in: `info --node "(emacs)Buffers"'


File: info-stnd.info,  Node: Cursor Commands,  Next: Scrolling Commands,  Prev: Options,  Up: Top

Moving the Cursor
*****************

Many people find that reading screens of text page by page is made
easier when one is able to indicate particular pieces of text with some
kind of pointing device.  Since this is the case, GNU Info (both the
Emacs and standalone versions) have several commands which allow you to
move the cursor about the screen.  The notation used in this manual to
describe keystrokes is identical to the notation used within the Emacs
manual, and the GNU Readline manual.  *Note Character Conventions:
(emacs)Characters, if you are unfamiliar with the notation.

The following table lists the basic cursor movement commands in Info.
Each entry consists of the key sequence you should type to execute the
cursor movement, the `M-x'(1) command name (displayed in parentheses),
and a short description of what the command does.  All of the cursor
motion commands can take an "numeric" argument (*note
`universal-argument': Miscellaneous Commands.), to find out how to
supply them.  With a numeric argument, the motion commands are simply
executed that many times; for example, a numeric argument of 4 given to
`next-line' causes the cursor to move down 4 lines.  With a negative
numeric argument, the motion is reversed; an argument of -4 given to
the `next-line' command would cause the cursor to move *up* 4 lines.

`C-n' (`next-line')
     Move the cursor down to the next line.

`C-p' (`prev-line')
     Move the cursor up to the previous line.

`C-a' (`beginning-of-line')
     Move the cursor to the start of the current line.

`C-e' (`end-of-line')
     Move the cursor to the end of the current line.

`C-f' (`forward-char')
     Move the cursor forward a character.

`C-b' (`backward-char')
     Move the cursor backward a character.

`M-f' (`forward-word')
     Move the cursor forward a word.

`M-b' (`backward-word')
     Move the cursor backward a word.

`M-<' (`beginning-of-node')
`b'
     Move the cursor to the start of the current node.

`M->' (`end-of-node')
     Move the cursor to the end of the current node.

`M-r' (`move-to-window-line')
     Move the cursor to a specific line of the window.  Without a
     numeric argument, `M-r' moves the cursor to the start of the line
     in the center of the window.  With a numeric argument of N, `M-r'
     moves the cursor to the start of the Nth line in the window.

---------- Footnotes ----------

(1) `M-x' is also a command; it invokes `execute-extended-command'.
*Note Executing an extended command: (emacs)M-x, for more detailed
information.


File: info-stnd.info,  Node: Scrolling Commands,  Next: Node Commands,  Prev: Cursor Commands,  Up: Top

Moving Text Within a Window
***************************

Sometimes you are looking at a screenful of text, and only part of the
current paragraph you are reading is visible on the screen.  The
commands detailed in this section are used to shift which part of the
current node is visible on the screen.

`SPC' (`scroll-forward')
`C-v'
     Shift the text in this window up.  That is, show more of the node
     which is currently below the bottom of the window.  With a numeric
     argument, show that many more lines at the bottom of the window; a
     numeric argument of 4 would shift all of the text in the window up
     4 lines (discarding the top 4 lines), and show you four new lines
     at the bottom of the window.  Without a numeric argument, <SPC>
     takes the bottom two lines of the window and places them at the
     top of the window, redisplaying almost a completely new screenful
     of lines.

`DEL' (`scroll-backward')
`M-v'
     Shift the text in this window down.  The inverse of
     `scroll-forward'.

The `scroll-forward' and `scroll-backward' commands can also move
forward and backward through the node structure of the file.  If you
press <SPC> while viewing the end of a node, or <DEL> while viewing the
beginning of a node, what happens is controlled by the variable
`scroll-behavior'.  *Note `scroll-behavior': Variables, for more
information.

`C-l' (`redraw-display')
     Redraw the display from scratch, or shift the line containing the
     cursor to a specified location.  With no numeric argument, `C-l'
     clears the screen, and then redraws its entire contents.  Given a
     numeric argument of N, the line containing the cursor is shifted
     so that it is on the Nth line of the window.

`C-x w' (`toggle-wrap')
     Toggles the state of line wrapping in the current window.
     Normally, lines which are longer than the screen width "wrap",
     i.e., they are continued on the next line.  Lines which wrap have
     a `\' appearing in the rightmost column of the screen.  You can
     cause such lines to be terminated at the rightmost column by
     changing the state of line wrapping in the window with `C-x w'.
     When a line which needs more space than one screen width to
     display is displayed, a `$' appears in the rightmost column of the
     screen, and the remainder of the line is invisible.


File: info-stnd.info,  Node: Node Commands,  Next: Searching Commands,  Prev: Scrolling Commands,  Up: Top

Selecting a New Node
********************

This section details the numerous Info commands which select a new node
to view in the current window.

The most basic node commands are `n', `p', `u', and `l'.

When you are viewing a node, the top line of the node contains some Info
"pointers" which describe where the next, previous, and up nodes are.
Info uses this line to move about the node structure of the file when
you use the following commands:

`n' (`next-node')
     Select the `Next' node.

`p' (`prev-node')
     Select the `Prev' node.

`u' (`up-node')
     Select the `Up' node.

You can easily select a node that you have already viewed in this window
by using the `l' command - this name stands for "last", and actually
moves through the list of already visited nodes for this window.  `l'
with a negative numeric argument moves forward through the history of
nodes for this window, so you can quickly step between two adjacent (in
viewing history) nodes.

`l' (`history-node')
     Select the most recently selected node in this window.

Two additional commands make it easy to select the most commonly
selected nodes; they are `t' and `d'.

`t' (`top-node')
     Select the node `Top' in the current Info file.

`d' (`dir-node')
     Select the directory node (i.e., the node `(dir)').

Here are some other commands which immediately result in the selection
of a different node in the current window:

`<' (`first-node')
     Selects the first node which appears in this file.  This node is
     most often `Top', but it does not have to be.

`>' (`last-node')
     Select the last node which appears in this file.

`]' (`global-next-node')
     Move forward or down through node structure.  If the node that you
     are currently viewing has a `Next' pointer, that node is selected.
     Otherwise, if this node has a menu, the first menu item is
     selected.  If there is no `Next' and no menu, the same process is
     tried with the `Up' node of this node.

`[' (`global-prev-node')
     Move backward or up through node structure.  If the node that you
     are currently viewing has a `Prev' pointer, that node is selected.
     Otherwise, if the node has an `Up' pointer, that node is selected,
     and if it has a menu, the last item in the menu is selected.

You can get the same behavior as `global-next-node' and
`global-prev-node' while simply scrolling through the file with <SPC>
and <DEL>; *Note `scroll-behavior': Variables, for more information.

`g' (`goto-node')
     Read the name of a node and select it.  No completion is done while
     reading the node name, since the desired node may reside in a
     separate file.  The node must be typed exactly as it appears in
     the Info file.  A file name may be included as with any node
     specification, for example

          `g(emacs)Buffers'

     finds the node `Buffers' in the Info file `emacs'.

`C-x k' (`kill-node')
     Kill a node.  The node name is prompted for in the echo area, with
     a default of the current node.  "Killing" a node means that Info
     tries hard to forget about it, removing it from the list of
     history nodes kept for the window where that node is found.
     Another node is selected in the window which contained the killed
     node.

`C-x C-f' (`view-file')
     Read the name of a file and selects the entire file.  The command
          `C-x C-f FILENAME'
     is equivalent to typing
          `g(FILENAME)*'

`C-x C-b' (`list-visited-nodes')
     Make a window containing a menu of all of the currently visited
     nodes.  This window becomes the selected window, and you may use
     the standard Info commands within it.

`C-x b' (`select-visited-node')
     Select a node which has been previously visited in a visible
     window.  This is similar to `C-x C-b' followed by `m', but no
     window is created.


File: info-stnd.info,  Node: Searching Commands,  Next: Xref Commands,  Prev: Node Commands,  Up: Top

Searching an Info File
**********************

GNU Info allows you to search for a sequence of characters throughout an
entire Info file, search through the indices of an Info file, or find
areas within an Info file which discuss a particular topic.

`s' (`search')
     Read a string in the echo area and search for it.

`C-s' (`isearch-forward')
     Interactively search forward through the Info file for a string as
     you type it.

`C-r' (`isearch-backward')
     Interactively search backward through the Info file for a string as
     you type it.

`i' (`index-search')
     Look up a string in the indices for this Info file, and select a
     node where the found index entry points to.

`,' (`next-index-match')
     Move to the node containing the next matching index item from the
     last `i' command.

The most basic searching command is `s' (`search').  The `s' command
prompts you for a string in the echo area, and then searches the
remainder of the Info file for an occurrence of that string.  If the
string is found, the node containing it is selected, and the cursor is
left positioned at the start of the found string.  Subsequent `s'
commands show you the default search string within `[' and `]';
pressing <RET> instead of typing a new string will use the default
search string.

"Incremental searching" is similar to basic searching, but the string
is looked up while you are typing it, instead of waiting until the
entire search string has been specified.


File: info-stnd.info,  Node: Xref Commands,  Next: Window Commands,  Prev: Searching Commands,  Up: Top

Selecting Cross References
**************************

We have already discussed the `Next', `Prev', and `Up' pointers which
appear at the top of a node.  In addition to these pointers, a node may
contain other pointers which refer you to a different node, perhaps in
another Info file.  Such pointers are called "cross references", or
"xrefs" for short.

* Menu:

* Parts of an Xref::            What a cross reference is made of.
* Selecting Xrefs::             Commands for selecting menu or note items.


File: info-stnd.info,  Node: Parts of an Xref,  Next: Selecting Xrefs,  Up: Xref Commands

Parts of an Xref
================

Cross references have two major parts: the first part is called the
"label"; it is the name that you can use to refer to the cross
reference, and the second is the "target"; it is the full name of the
node that the cross reference points to.

The target is separated from the label by a colon `:'; first the label
appears, and then the target.  For example, in the sample menu cross
reference below, the single colon separates the label from the target.

     * Foo Label: Foo Target.        More information about Foo.

Note the `.' which ends the name of the target.  The `.' is not part of
the target; it serves only to let Info know where the target name ends.

A shorthand way of specifying references allows two adjacent colons to
stand for a target name which is the same as the label name:

     * Foo Commands::                Commands pertaining to Foo.

In the above example, the name of the target is the same as the name of
the label, in this case `Foo Commands'.

You will normally see two types of cross reference while viewing nodes:
"menu" references, and "note" references.  Menu references appear
within a node's menu; they begin with a `*' at the beginning of a line,
and continue with a label, a target, and a comment which describes what
the contents of the node pointed to contains.

Note references appear within the body of the node text; they begin with
`*Note', and continue with a label and a target.

Like `Next', `Prev', and `Up' pointers, cross references can point to
any valid node.  They are used to refer you to a place where more
detailed information can be found on a particular subject.  Here is a
cross reference which points to a node within the Texinfo
documentation:  *Note Writing an Xref: (texinfo)xref, for more
information on creating your own texinfo cross references.


File: info-stnd.info,  Node: Selecting Xrefs,  Prev: Parts of an Xref,  Up: Xref Commands

Selecting Xrefs
===============

The following table lists the Info commands which operate on menu items.

`1' (`menu-digit')
`2' ... `9'
     Within an Info window, pressing a single digit, (such as `1'),
     selects that menu item, and places its node in the current window.
     For convenience, there is one exception; pressing `0' selects the
     *last* item in the node's menu.

`0' (`last-menu-item')
     Select the last item in the current node's menu.

`m' (`menu-item')
     Reads the name of a menu item in the echo area and selects its
     node.  Completion is available while reading the menu label.

`M-x find-menu'
     Move the cursor to the start of this node's menu.

This table lists the Info commands which operate on note cross
references.

`f' (`xref-item')
`r'
     Reads the name of a note cross reference in the echo area and
     selects its node.  Completion is available while reading the cross
     reference label.

Finally, the next few commands operate on menu or note references alike:

`TAB' (`move-to-next-xref')
     Move the cursor to the start of the next nearest menu item or note
     reference in this node.  You can then use <RET>
     (`select-reference-this-line') to select the menu or note
     reference.

`M-TAB' (`move-to-prev-xref')
     Move the cursor the start of the nearest previous menu item or note
     reference in this node.

`RET' (`select-reference-this-line')
     Select the menu item or note reference appearing on this line.


File: info-stnd.info,  Node: Window Commands,  Next: Printing Nodes,  Prev: Xref Commands,  Up: Top

Manipulating Multiple Windows
*****************************

A "window" is a place to show the text of a node.  Windows have a view
area where the text of the node is displayed, and an associated "mode
line", which briefly describes the node being viewed.

GNU Info supports multiple windows appearing in a single screen; each
window is separated from the next by its modeline.  At any time, there
is only one "active" window, that is, the window in which the cursor
appears.  There are commands available for creating windows, changing
the size of windows, selecting which window is active, and for deleting
windows.

* Menu:

* The Mode Line::               What appears in the mode line?
* Basic Windows::               Manipulating windows in Info.
* The Echo Area::               Used for displaying errors and reading input.


File: info-stnd.info,  Node: The Mode Line,  Next: Basic Windows,  Up: Window Commands

The Mode Line
=============

A "mode line" is a line of inverse video which appears at the bottom of
an Info window.  It describes the contents of the window just above it;
this information includes the name of the file and node appearing in
that window, the number of screen lines it takes to display the node,
and the percentage of text that is above the top of the window.  It can
also tell you if the indirect tags table for this Info file needs to be
updated, and whether or not the Info file was compressed when stored on
disk.

Here is a sample mode line for a window containing an uncompressed file
named `dir', showing the node `Top'.

     -----Info: (dir)Top, 40 lines --Top---------------------------------------
                 ^^   ^   ^^^        ^^
               (file)Node #lines    where

When a node comes from a file which is compressed on disk, this is
indicated in the mode line with two small `z''s.  In addition, if the
Info file containing the node has been split into subfiles, the name of
the subfile containing the node appears in the modeline as well:

     --zz-Info: (emacs)Top, 291 lines --Top-- Subfile: emacs-1.Z---------------

When Info makes a node internally, such that there is no corresponding
info file on disk, the name of the node is surrounded by asterisks
(`*').  The name itself tells you what the contents of the window are;
the sample mode line below shows an internally constructed node showing
possible completions:

     -----Info: *Completions*, 7 lines --All-----------------------------------


File: info-stnd.info,  Node: Basic Windows,  Next: The Echo Area,  Prev: The Mode Line,  Up: Window Commands

Window Commands
===============

It can be convenient to view more than one node at a time.  To allow
this, Info can display more than one "window".  Each window has its own
mode line (*note The Mode Line::.) and history of nodes viewed in that
window (*note `history-node': Node Commands.).

`C-x o' (`next-window')
     Select the next window on the screen.  Note that the echo area can
     only be selected if it is already in use, and you have left it
     temporarily.  Normally, `C-x o' simply moves the cursor into the
     next window on the screen, or if you are already within the last
     window, into the first window on the screen.  Given a numeric
     argument, `C-x o' moves over that many windows.  A negative
     argument causes `C-x o' to select the previous window on the
     screen.

`M-x prev-window'
     Select the previous window on the screen.  This is identical to
     `C-x o' with a negative argument.

`C-x 2' (`split-window')
     Split the current window into two windows, both showing the same
     node.  Each window is one half the size of the original window,
     and the cursor remains in the original window.  The variable
     `automatic-tiling' can cause all of the windows on the screen to
     be resized for you automatically, please *note automatic-tiling:
     Variables. for more information.

`C-x 0' (`delete-window')
     Delete the current window from the screen.  If you have made too
     many windows and your screen appears cluttered, this is the way to
     get rid of some of them.

`C-x 1' (`keep-one-window')
     Delete all of the windows excepting the current one.

`ESC C-v' (`scroll-other-window')
     Scroll the other window, in the same fashion that `C-v' might
     scroll the current window.  Given a negative argument, scroll the
     "other" window backward.

`C-x ^' (`grow-window')
     Grow (or shrink) the current window.  Given a numeric argument,
     grow the current window that many lines; with a negative numeric
     argument, shrink the window instead.

`C-x t' (`tile-windows')
     Divide the available screen space among all of the visible windows.
     Each window is given an equal portion of the screen in which to
     display its contents.  The variable `automatic-tiling' can cause
     `tile-windows' to be called when a window is created or deleted.
     *Note `automatic-tiling': Variables.


File: info-stnd.info,  Node: The Echo Area,  Prev: Basic Windows,  Up: Window Commands

The Echo Area
=============

The "echo area" is a one line window which appears at the bottom of the
screen.  It is used to display informative or error messages, and to
read lines of input from you when that is necessary.  Almost all of the
commands available in the echo area are identical to their Emacs
counterparts, so please refer to that documentation for greater depth of
discussion on the concepts of editing a line of text.  The following
table briefly lists the commands that are available while input is being
read in the echo area:

`C-f' (`echo-area-forward')
     Move forward a character.

`C-b' (`echo-area-backward')
     Move backward a character.

`C-a' (`echo-area-beg-of-line')
     Move to the start of the input line.

`C-e' (`echo-area-end-of-line')
     Move to the end of the input line.

`M-f' (`echo-area-forward-word')
     Move forward a word.

`M-b' (`echo-area-backward-word')
     Move backward a word.

`C-d' (`echo-area-delete')
     Delete the character under the cursor.

`DEL' (`echo-area-rubout')
     Delete the character behind the cursor.

`C-g' (`echo-area-abort')
     Cancel or quit the current operation.  If completion is being read,
     `C-g' discards the text of the input line which does not match any
     completion.  If the input line is empty, `C-g' aborts the calling
     function.

`RET' (`echo-area-newline')
     Accept (or forces completion of) the current input line.

`C-q' (`echo-area-quoted-insert')
     Insert the next character verbatim.  This is how you can insert
     control characters into a search string, for example.

PRINTING CHARACTER (`echo-area-insert')
     Insert the character.

`M-TAB' (`echo-area-tab-insert')
     Insert a TAB character.

`C-t' (`echo-area-transpose-chars')
     Transpose the characters at the cursor.

The next group of commands deal with "killing", and "yanking" text.
For an in depth discussion of killing and yanking, *note Killing and
Deleting: (emacs)Killing.

`M-d' (`echo-area-kill-word')
     Kill the word following the cursor.

`M-DEL' (`echo-area-backward-kill-word')
     Kill the word preceding the cursor.

`C-k' (`echo-area-kill-line')
     Kill the text from the cursor to the end of the line.

`C-x DEL' (`echo-area-backward-kill-line')
     Kill the text from the cursor to the beginning of the line.

`C-y' (`echo-area-yank')
     Yank back the contents of the last kill.

`M-y' (`echo-area-yank-pop')
     Yank back a previous kill, removing the last yanked text first.

Sometimes when reading input in the echo area, the command that needed
input will only accept one of a list of several choices.  The choices
represent the "possible completions", and you must respond with one of
them.  Since there are a limited number of responses you can make, Info
allows you to abbreviate what you type, only typing as much of the
response as is necessary to uniquely identify it.  In addition, you can
request Info to fill in as much of the response as is possible; this is
called "completion".

The following commands are available when completing in the echo area:

`TAB' (`echo-area-complete')
`SPC'
     Insert as much of a completion as is possible.

`?' (`echo-area-possible-completions')
     Display a window containing a list of the possible completions of
     what you have typed so far.  For example, if the available choices
     are:

          bar
          foliate
          food
          forget

     and you have typed an `f', followed by `?', the possible
     completions would contain:

          foliate
          food
          forget

     i.e., all of the choices which begin with `f'.  Pressing <SPC> or
     <TAB> would result in `fo' appearing in the echo area, since all
     of the choices which begin with `f' continue with `o'.  Now,
     typing `l' followed by `TAB' results in `foliate' appearing in the
     echo area, since that is the only choice which begins with `fol'.

`ESC C-v' (`echo-area-scroll-completions-window')
     Scroll the completions window, if that is visible, or the "other"
     window if not.


File: info-stnd.info,  Node: Printing Nodes,  Next: Miscellaneous Commands,  Prev: Window Commands,  Up: Top

Printing Out Nodes
******************

You may wish to print out the contents of a node as  a quick reference
document for later use.  Info provides you with a command for doing
this.  In general, we recommend that you use TeX to format the document
and print sections of it, by running `tex' on the Texinfo source file.

`M-x print-node'
     Pipe the contents of the current node through the command in the
     environment variable `INFO_PRINT_COMMAND'.  If the variable does
     not exist, the node is simply piped to `lpr'.


File: info-stnd.info,  Node: Miscellaneous Commands,  Next: Variables,  Prev: Printing Nodes,  Up: Top

Miscellaneous Commands
**********************

GNU Info contains several commands which self-document GNU Info:

`M-x describe-command'
     Read the name of an Info command in the echo area and then display
     a brief description of what that command does.

`M-x describe-key'
     Read a key sequence in the echo area, and then display the name and
     documentation of the Info command that the key sequence invokes.

`M-x describe-variable'
     Read the name of a variable in the echo area and then display a
     brief description of what the variable affects.

`M-x where-is'
     Read the name of an Info command in the echo area, and then display
     a key sequence which can be typed in order to invoke that command.

`C-h' (`get-help-window')
`?'
     Create (or Move into) the window displaying `*Help*', and place a
     node containing a quick reference card into it.  This window
     displays the most concise information about GNU Info available.

`h' (`get-info-help-node')
     Try hard to visit the node `(info)Help'.  The Info file
     `info.texi' distributed with GNU Info contains this node.  Of
     course, the file must first be processed with `makeinfo', and then
     placed into the location of your Info directory.

Here are the commands for creating a numeric argument:

`C-u' (`universal-argument')
     Start (or multiply by 4) the current numeric argument.  `C-u' is a
     good way to give a small numeric argument to cursor movement or
     scrolling commands; `C-u C-v' scrolls the screen 4 lines, while
     `C-u C-u C-n' moves the cursor down 16 lines.

`M-1' (`add-digit-to-numeric-arg')
`M-2' ... `M-9'
     Add the digit value of the invoking key to the current numeric
     argument.  Once Info is reading a numeric argument, you may just
     type the digits of the argument, without the Meta prefix.  For
     example, you might give `C-l' a numeric argument of 32 by typing:

          C-u 3 2 C-l

     or

          M-3 2 C-l

`C-g' is used to abort the reading of a multi-character key sequence,
to cancel lengthy operations (such as multi-file searches) and to
cancel reading input in the echo area.

`C-g' (`abort-key')
     Cancel current operation.

The `q' command of Info simply quits running Info.

`q' (`quit')
     Exit GNU Info.

If the operating system tells GNU Info that the screen is 60 lines tall,
and it is actually only 40 lines tall, here is a way to tell Info that
the operating system is correct.

`M-x set-screen-height'
     Read a height value in the echo area and set the height of the
     displayed screen to that value.

Finally, Info provides a convenient way to display footnotes which might
be associated with the current node that you are viewing:

`ESC C-f' (`show-footnotes')
     Show the footnotes (if any) associated with the current node in
     another window.  You can have Info automatically display the
     footnotes associated with a node when the node is selected by
     setting the variable `automatic-footnotes'.  *Note
     `automatic-footnotes': Variables.


File: info-stnd.info,  Node: Variables,  Next: GNU Info Global Index,  Prev: Miscellaneous Commands,  Up: Top

Manipulating Variables
**********************

GNU Info contains several "variables" whose values are looked at by
various Info commands.  You can change the values of these variables,
and thus change the behavior of Info to more closely match your
environment and Info file reading manner.

`M-x set-variable'
     Read the name of a variable, and the value for it, in the echo
     area and then set the variable to that value.  Completion is
     available when reading the variable name; often, completion is
     available when reading the value to give to the variable, but that
     depends on the variable itself.  If a variable does *not* supply
     multiple choices to complete over, it expects a numeric value.

`M-x describe-variable'
     Read the name of a variable in the echo area and then display a
     brief description of what the variable affects.

Here is a list of the variables that you can set in Info.

`automatic-footnotes'
     When set to `On', footnotes appear and disappear automatically.
     This variable is `On' by default.  When a node is selected, a
     window containing the footnotes which appear in that node is
     created, and the footnotes are displayed within the new window.
     The window that Info creates to contain the footnotes is called
     `*Footnotes*'.  If a node is selected which contains no footnotes,
     and a `*Footnotes*' window is on the screen, the `*Footnotes*'
     window is deleted.  Footnote windows created in this fashion are
     not automatically tiled so that they can use as little of the
     display as is possible.

`automatic-tiling'
     When set to `On', creating or deleting a window resizes other
     windows.  This variable is `Off' by default.  Normally, typing
     `C-x 2' divides the current window into two equal parts.  When
     `automatic-tiling' is set to `On', all of the windows are resized
     automatically, keeping an equal number of lines visible in each
     window.  There are exceptions to the automatic tiling;
     specifically, the windows `*Completions*' and `*Footnotes*' are
     *not* resized through automatic tiling; they remain their original
     size.

`visible-bell'
     When set to `On', GNU Info attempts to flash the screen instead of
     ringing the bell.  This variable is `Off' by default.  Of course,
     Info can only flash the screen if the terminal allows it; in the
     case that the terminal does not allow it, the setting of this
     variable has no effect.  However, you can make Info perform
     quietly by setting the `errors-ring-bell' variable to `Off'.

`errors-ring-bell'
     When set to `On', errors cause the bell to ring.  The default
     setting of this variable is `On'.

`gc-compressed-files'
     When set to `On', Info garbage collects files which had to be
     uncompressed.  The default value of this variable is `Off'.
     Whenever a node is visited in Info, the Info file containing that
     node is read into core, and Info reads information about the tags
     and nodes contained in that file.  Once the tags information is
     read by Info, it is never forgotten.  However, the actual text of
     the nodes does not need to remain in core unless a particular Info
     window needs it.  For non-compressed files, the text of the nodes
     does not remain in core when it is no longer in use.  But
     de-compressing a file can be a time consuming operation, and so
     Info tries hard not to do it twice.  `gc-compressed-files' tells
     Info it is okay to garbage collect the text of the nodes of a file
     which was compressed on disk.

`show-index-match'
     When set to `On', the portion of the matched search string is
     highlighted in the message which explains where the matched search
     string was found.  The default value of this variable is `On'.
     When Info displays the location where an index match was found,
     (*note `next-index-match': Searching Commands.), the portion of the
     string that you had typed is highlighted by displaying it in the
     inverse case from its surrounding characters.

`scroll-behavior'
     Control what happens when forward scrolling is requested at the
     end of a node, or when backward scrolling is requested at the
     beginning of a node.  The default value for this variable is
     `Continuous'.  There are three possible values for this variable:

    `Continuous'
          Try to get the first item in this node's menu, or failing
          that, the `Next' node, or failing that, the `Next' of the
          `Up'.  This behavior is identical to using the `]'
          (`global-next-node') and `[' (`global-prev-node') commands.

    `Next Only'
          Only try to get the `Next' node.

    `Page Only'
          Simply give up, changing nothing.  If `scroll-behavior' is
          `Page Only', no scrolling command can change the node that is
          being viewed.

`scroll-step'
     The number of lines to scroll when the cursor moves out of the
     window.  Scrolling happens automatically if the cursor has moved
     out of the visible portion of the node text when it is time to
     display.  Usually the scrolling is done so as to put the cursor on
     the center line of the current window.  However, if the variable
     `scroll-step' has a nonzero value, Info attempts to scroll the
     node text by that many lines; if that is enough to bring the
     cursor back into the window, that is what is done.  The default
     value of this variable is 0, thus placing the cursor (and the text
     it is attached to) in the center of the window.  Setting this
     variable to 1 causes a kind of "smooth scrolling" which some
     people prefer.

`ISO-Latin'
     When set to `On', Info accepts and displays ISO Latin characters.
     By default, Info assumes an ASCII character set.  `ISO-Latin' tells
     Info that it is running in an environment where the European
     standard character set is in use, and allows you to input such
     characters to Info, as well as display them.


File: info-stnd.info,  Node: GNU Info Global Index,  Prev: Variables,  Up: Top

Global Index
************

* Menu:

* ,:                                     Searching Commands.
* --subnodes, command line option:       Options.
* 0, in Info windows:                    Selecting Xrefs.
* 1 ... 9, in Info windows:              Selecting Xrefs.
* <:                                     Node Commands.
* >:                                     Node Commands.
* ?, in Info windows:                    Miscellaneous Commands.
* ?, in the echo area:                   The Echo Area.
* [:                                     Node Commands.
* ]:                                     Node Commands.
* abort-key:                             Miscellaneous Commands.
* add-digit-to-numeric-arg:              Miscellaneous Commands.
* arguments, command line:               Options.
* automatic-footnotes:                   Variables.
* automatic-tiling:                      Variables.
* b, in Info windows:                    Cursor Commands.
* backward-char:                         Cursor Commands.
* backward-word:                         Cursor Commands.
* beginning-of-line:                     Cursor Commands.
* beginning-of-node:                     Cursor Commands.
* C-a, in Info windows:                  Cursor Commands.
* C-a, in the echo area:                 The Echo Area.
* C-b, in Info windows:                  Cursor Commands.
* C-b, in the echo area:                 The Echo Area.
* C-d, in the echo area:                 The Echo Area.
* C-e, in Info windows:                  Cursor Commands.
* C-e, in the echo area:                 The Echo Area.
* C-f, in Info windows:                  Cursor Commands.
* C-f, in the echo area:                 The Echo Area.
* C-g, in Info windows:                  Miscellaneous Commands.
* C-g, in the echo area:                 The Echo Area.
* C-h:                                   Miscellaneous Commands.
* C-k, in the echo area:                 The Echo Area.
* C-l:                                   Scrolling Commands.
* C-n:                                   Cursor Commands.
* C-p:                                   Cursor Commands.
* C-q, in the echo area:                 The Echo Area.
* C-r:                                   Searching Commands.
* C-s:                                   Searching Commands.
* C-t, in the echo area:                 The Echo Area.
* C-u:                                   Miscellaneous Commands.
* C-v:                                   Scrolling Commands.
* C-w:                                   Scrolling Commands.
* C-x 0:                                 Basic Windows.
* C-x 1:                                 Basic Windows.
* C-x 2:                                 Basic Windows.
* C-x ^:                                 Basic Windows.
* C-x b:                                 Node Commands.
* C-x C-b:                               Node Commands.
* C-x C-f:                               Node Commands.
* C-x DEL, in the echo area:             The Echo Area.
* C-x k:                                 Node Commands.
* C-x o:                                 Basic Windows.
* C-x t:                                 Basic Windows.
* C-y, in the echo area:                 The Echo Area.
* cancelling the current operation:      Miscellaneous Commands.
* cancelling typeahead:                  Miscellaneous Commands.
* command line options:                  Options.
* commands, describing:                  Miscellaneous Commands.
* cursor, moving:                        Cursor Commands.
* d:                                     Node Commands.
* DEL, in Info windows:                  Scrolling Commands.
* DEL, in the echo area:                 The Echo Area.
* delete-window:                         Basic Windows.
* describe-command:                      Miscellaneous Commands.
* describe-key:                          Miscellaneous Commands.
* describe-variable:                     Variables.
* dir-node:                              Node Commands.
* directory path:                        Options.
* echo area:                             The Echo Area.
* echo-area-abort:                       The Echo Area.
* echo-area-backward:                    The Echo Area.
* echo-area-backward-kill-line:          The Echo Area.
* echo-area-backward-kill-word:          The Echo Area.
* echo-area-backward-word:               The Echo Area.
* echo-area-beg-of-line:                 The Echo Area.
* echo-area-complete:                    The Echo Area.
* echo-area-delete:                      The Echo Area.
* echo-area-end-of-line:                 The Echo Area.
* echo-area-forward:                     The Echo Area.
* echo-area-forward-word:                The Echo Area.
* echo-area-insert:                      The Echo Area.
* echo-area-kill-line:                   The Echo Area.
* echo-area-kill-word:                   The Echo Area.
* echo-area-newline:                     The Echo Area.
* echo-area-possible-completions:        The Echo Area.
* echo-area-quoted-insert:               The Echo Area.
* echo-area-rubout:                      The Echo Area.
* echo-area-scroll-completions-window:   The Echo Area.
* echo-area-tab-insert:                  The Echo Area.
* echo-area-transpose-chars:             The Echo Area.
* echo-area-yank:                        The Echo Area.
* echo-area-yank-pop:                    The Echo Area.
* end-of-line:                           Cursor Commands.
* end-of-node:                           Cursor Commands.
* errors-ring-bell:                      Variables.
* ESC C-f:                               Miscellaneous Commands.
* ESC C-v, in Info windows:              Basic Windows.
* ESC C-v, in the echo area:             The Echo Area.
* f:                                     Selecting Xrefs.
* file, outputting to:                   Options.
* find-menu:                             Selecting Xrefs.
* first-node:                            Node Commands.
* footnotes, displaying:                 Miscellaneous Commands.
* forward-char:                          Cursor Commands.
* forward-word:                          Cursor Commands.
* functions, describing:                 Miscellaneous Commands.
* g:                                     Node Commands.
* gc-compressed-files:                   Variables.
* get-help-window:                       Miscellaneous Commands.
* get-info-help-node:                    Miscellaneous Commands.
* global-next-node:                      Node Commands.
* global-prev-node:                      Node Commands.
* goto-node:                             Node Commands.
* grow-window:                           Basic Windows.
* h:                                     Miscellaneous Commands.
* history-node:                          Node Commands.
* i:                                     Searching Commands.
* index search, selecting:               Options.
* index-search:                          Searching Commands.
* Info file, selecting:                  Options.
* INFO_PRINT_COMMAND, environment variable: Printing Nodes.
* isearch-backward:                      Searching Commands.
* isearch-forward:                       Searching Commands.
* ISO Latin characters:                  Variables.
* ISO-Latin:                             Variables.
* keep-one-window:                       Basic Windows.
* keys, describing:                      Miscellaneous Commands.
* kill-node:                             Node Commands.
* l:                                     Node Commands.
* last-menu-item:                        Selecting Xrefs.
* last-node:                             Node Commands.
* list-visited-nodes:                    Node Commands.
* m:                                     Selecting Xrefs.
* M-1 ... M-9:                           Miscellaneous Commands.
* M-<:                                   Cursor Commands.
* M->:                                   Cursor Commands.
* M-b, in Info windows:                  Cursor Commands.
* M-b, in the echo area:                 The Echo Area.
* M-d, in the echo area:                 The Echo Area.
* M-DEL, in the echo area:               The Echo Area.
* M-f, in Info windows:                  Cursor Commands.
* M-f, in the echo area:                 The Echo Area.
* M-r:                                   Cursor Commands.
* M-TAB, in Info windows:                Selecting Xrefs.
* M-TAB, in the echo area:               The Echo Area.
* M-v:                                   Scrolling Commands.
* M-y, in the echo area:                 The Echo Area.
* menu, following:                       Options.
* menu-digit:                            Selecting Xrefs.
* menu-item:                             Selecting Xrefs.
* move-to-next-xref:                     Selecting Xrefs.
* move-to-prev-xref:                     Selecting Xrefs.
* move-to-window-line:                   Cursor Commands.
* n:                                     Node Commands.
* next-index-match:                      Searching Commands.
* next-line:                             Cursor Commands.
* next-node:                             Node Commands.
* next-window:                           Basic Windows.
* node, selecting:                       Options.
* nodes, selection of:                   Node Commands.
* numeric arguments:                     Miscellaneous Commands.
* online help, using Info as:            Options.
* outputting to a file:                  Options.
* p:                                     Node Commands.
* prev-line:                             Cursor Commands.
* prev-node:                             Node Commands.
* prev-window:                           Basic Windows.
* print-node:                            Printing Nodes.
* printing:                              Printing Nodes.
* printing characters, in the echo area: The Echo Area.
* q:                                     Miscellaneous Commands.
* quit:                                  Miscellaneous Commands.
* quitting:                              Miscellaneous Commands.
* r:                                     Selecting Xrefs.
* redraw-display:                        Scrolling Commands.
* RET, in Info windows:                  Selecting Xrefs.
* RET, in the echo area:                 The Echo Area.
* s:                                     Searching Commands.
* screen, changing the height of:        Miscellaneous Commands.
* scroll-backward:                       Scrolling Commands.
* scroll-behavior:                       Variables.
* scroll-forward:                        Scrolling Commands.
* scroll-other-window:                   Basic Windows.
* scroll-step:                           Variables.
* scrolling:                             Scrolling Commands.
* scrolling through node structure:      Scrolling Commands.
* search:                                Searching Commands.
* searching:                             Searching Commands.
* select-reference-this-line:            Selecting Xrefs.
* select-visited-node:                   Node Commands.
* set-screen-height:                     Miscellaneous Commands.
* set-variable:                          Variables.
* show-footnotes:                        Miscellaneous Commands.
* show-index-match:                      Variables.
* SPC, in Info windows:                  Scrolling Commands.
* SPC, in the echo area:                 The Echo Area.
* split-window:                          Basic Windows.
* t:                                     Node Commands.
* TAB, in Info windows:                  Selecting Xrefs.
* TAB, in the echo area:                 The Echo Area.
* tile-windows:                          Basic Windows.
* tiling:                                Basic Windows.
* toggle-wrap:                           Scrolling Commands.
* top-node:                              Node Commands.
* u:                                     Node Commands.
* universal-argument:                    Miscellaneous Commands.
* up-node:                               Node Commands.
* variables, describing:                 Variables.
* variables, setting:                    Variables.
* version information:                   Options.
* view-file:                             Node Commands.
* visible-bell:                          Variables.
* where-is:                              Miscellaneous Commands.
* windows, creating:                     Basic Windows.
* windows, deleting:                     Basic Windows.
* windows, manipulating:                 Window Commands.
* windows, selecting:                    Basic Windows.
* xref-item:                             Selecting Xrefs.



Tag Table:
Node: Top1429
Node: What is Info2746
Node: Options3280
Node: Cursor Commands6762
Node: Scrolling Commands9403
Node: Node Commands11873
Node: Searching Commands15840
Node: Xref Commands17430
Node: Parts of an Xref18045
Node: Selecting Xrefs19990
Node: Window Commands21579
Node: The Mode Line22514
Node: Basic Windows24153
Node: The Echo Area26655
Node: Printing Nodes30816
Node: Miscellaneous Commands31459
Node: Variables34626
Node: GNU Info Global Index40796

End Tag Table
